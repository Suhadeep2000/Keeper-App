{"ast":null,"code":"import { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport appendOwnerState from './appendOwnerState';\nimport mergeSlotProps from './mergeSlotProps';\nimport resolveComponentProps from './resolveComponentProps';\n/**\r\n * @ignore - do not document.\r\n * Builds the props to be passed into the slot of an unstyled component.\r\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\r\n * If the slot component is not a host component, it also merges in the `ownerState`.\r\n *\r\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\r\n */\nexport default function useSlotProps(parameters) {\n  var _parameters$additiona;\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    ...rest\n  } = parameters;\n  const resolvedComponentsProps = resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...rest,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}","map":{"version":3,"names":["unstable_useForkRef","useForkRef","appendOwnerState","mergeSlotProps","resolveComponentProps","useSlotProps","parameters","_parameters$additiona","elementType","externalSlotProps","ownerState","rest","resolvedComponentsProps","props","mergedProps","internalRef","ref","additionalProps"],"sources":["C:/Users/hp/Desktop/keeper-app/node_modules/@mui/base/utils/useSlotProps.js"],"sourcesContent":["import { unstable_useForkRef as useForkRef } from '@mui/utils';\r\nimport appendOwnerState from './appendOwnerState';\r\nimport mergeSlotProps from './mergeSlotProps';\r\nimport resolveComponentProps from './resolveComponentProps';\r\n/**\r\n * @ignore - do not document.\r\n * Builds the props to be passed into the slot of an unstyled component.\r\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\r\n * If the slot component is not a host component, it also merges in the `ownerState`.\r\n *\r\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\r\n */\r\nexport default function useSlotProps(parameters) {\r\n  var _parameters$additiona;\r\n  const {\r\n    elementType,\r\n    externalSlotProps,\r\n    ownerState,\r\n    ...rest\r\n  } = parameters;\r\n  const resolvedComponentsProps = resolveComponentProps(externalSlotProps, ownerState);\r\n  const {\r\n    props: mergedProps,\r\n    internalRef\r\n  } = mergeSlotProps({\r\n    ...rest,\r\n    externalSlotProps: resolvedComponentsProps\r\n  });\r\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref);\r\n  const props = appendOwnerState(elementType, {\r\n    ...mergedProps,\r\n    ref\r\n  }, ownerState);\r\n  return props;\r\n}"],"mappings":"AAAA,SAASA,mBAAmB,IAAIC,UAAU,QAAQ,YAAY;AAC9D,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,qBAAqB,MAAM,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,YAAYA,CAACC,UAAU,EAAE;EAC/C,IAAIC,qBAAqB;EACzB,MAAM;IACJC,WAAW;IACXC,iBAAiB;IACjBC,UAAU;IACV,GAAGC;EACL,CAAC,GAAGL,UAAU;EACd,MAAMM,uBAAuB,GAAGR,qBAAqB,CAACK,iBAAiB,EAAEC,UAAU,CAAC;EACpF,MAAM;IACJG,KAAK,EAAEC,WAAW;IAClBC;EACF,CAAC,GAAGZ,cAAc,CAAC;IACjB,GAAGQ,IAAI;IACPF,iBAAiB,EAAEG;EACrB,CAAC,CAAC;EACF,MAAMI,GAAG,GAAGf,UAAU,CAACc,WAAW,EAAEH,uBAAuB,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,uBAAuB,CAACI,GAAG,EAAE,CAACT,qBAAqB,GAAGD,UAAU,CAACW,eAAe,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGV,qBAAqB,CAACS,GAAG,CAAC;EAC9M,MAAMH,KAAK,GAAGX,gBAAgB,CAACM,WAAW,EAAE;IAC1C,GAAGM,WAAW;IACdE;EACF,CAAC,EAAEN,UAAU,CAAC;EACd,OAAOG,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}